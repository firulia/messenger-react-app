[{"/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/index.js":"1","/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/App.js":"2","/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/reportWebVitals.js":"3","/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/converter.js":"4","/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/components/Layout/Layout.js":"5","/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/components/Messenger/Messenger.js":"6","/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/components/Sidebar/Sidebar.js":"7","/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/exceptions/ServerException.js":"8","/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/service/MessagesService.js":"9","/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/models/HTTPCodes.js":"10","/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/store.js":"11"},{"size":500,"mtime":1610363847010,"results":"12","hashOfConfig":"13"},{"size":531,"mtime":1613640334759,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610363847010,"results":"15","hashOfConfig":"13"},{"size":420,"mtime":1610613672908,"results":"16","hashOfConfig":"13"},{"size":343,"mtime":1610715003046,"results":"17","hashOfConfig":"13"},{"size":4522,"mtime":1613645833087,"results":"18","hashOfConfig":"13"},{"size":300,"mtime":1612216626720,"results":"19","hashOfConfig":"13"},{"size":128,"mtime":1610999947435,"results":"20","hashOfConfig":"13"},{"size":2044,"mtime":1613593795042,"results":"21","hashOfConfig":"13"},{"size":16,"mtime":1611232506618,"results":"22","hashOfConfig":"13"},{"size":1507,"mtime":1613646266939,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"17ln0k1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/index.js",[],["49","50"],"/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/App.js",[],"/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/reportWebVitals.js",[],"/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/converter.js",[],"/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/components/Layout/Layout.js",[],"/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/components/Messenger/Messenger.js",["51","52","53"],"import React, { Component } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addTextAction, addMessageAction } from '../../store'\nimport { useState, useEffect } from 'react'\nimport classes from './Messenger.module.css'\nimport plus from '../../images/Icons/plus.svg';\nimport arrow from '../../images/Icons/arrow.svg';\nimport submit from '../../images/Icons/submit.svg';\nimport smiley from '../../images/Icons/smiley.svg';\nimport configData from '../../config.json';\nimport { formatAMPM } from '../../converter';\nimport { ReactSVG } from 'react-svg';\nimport { getMessages, sendMessage } from '../../service/MessagesService';\n\nconst Messenger = (props) => {\n\n    const users = useSelector(state => state.users)\n    const text = useSelector(state => state.text)\n    const messages = useSelector(state => state.messages)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        async function loadMessages() {\n            const messages = await getMessages(users)\n            dispatch(addMessageAction(messages))\n        }\n        loadMessages()\n    }, [])\n\n    async function loadMessages() {\n        const messages = await getMessages(users)\n        dispatch(addMessageAction(messages))\n    }\n\n    const handleInput = event => {\n        dispatch(addTextAction(event.target.value))\n    }\n\n    const sendMessageEventHandle = () => {\n        const textObj = {\n            \"text\": text\n        }\n        sendMessageHandle(textObj)\n    }\n\n    async function sendMessageHandle(textObj) {\n        await sendMessage(textObj)\n        dispatch(addTextAction(''))\n        loadMessages()\n    }\n\n    /*if (messages.length === 0) {\n        return <div>No messages</div>\n    }*/\n        return (\n            <div className={classes.Messenger}>\n                <div className={classes.Messenger_frame}>\n                    <header className={classes.Messenger_header}>\n                        <ReactSVG className={classes.Messenger_arrow} src={arrow} />\n                        {configData.ownerName}'s Groupchat\n                    </header>\n                    <div className={classes.Messenger_members}>\n                        {renderMembers()}\n                        <ReactSVG className={classes.Messenger_members_icon} src={plus} />\n                    </div>\n                    <div className={classes.Messenger_message_list}>\n                        <div className={classes.Messenger_message_list_wrapper}>\n                            {renderMessages()}\n                        </div>\n                    </div>\n                    <div className={classes.Messenger_action_bar}>\n                        <div className={classes.Messenger_action_bar_wrapper}>\n                            <div className={classes.Input_wrapper}>\n                                <input className={classes.Messenger_action_bar_input} type=\"text\" title=\"Message\" onChange={handleInput} value={text}/>\n                                <ReactSVG className={classes.Messenger_action_bar_input_icon} src={smiley} />\n                            </div>\n                            <button className={classes.Messenger_action_bar_btn} type=\"button\" onClick={sendMessageEventHandle}>\n                                <ReactSVG className={classes.Messenger_action_bar_btn} src={submit} />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    function renderMembers() {\n        return users.map((user, i) => (\n            <img key={i} className={classes.Messenger_members_item} style={{ borderColor: user.color }} src={user.icon} alt={\"Member\" + user.id} />\n        ))\n    }\n\n    function renderMessages() {\n\n        return messages.map((v, i) => (\n            <div className={classes.Messenger_message_list_wrapper___distanz} key={i}>\n                <img className={classes.Messenger_members_item} style={{ borderColor: v.user.color }} src={v.user.icon} alt=\"Member 1\" />\n                    <div className={classes.Messenger_message_list_item} style={{ backgroundColor: v.user.color }} >\n                    <div className={classes.Messenger_message_list_wrapper_info}>\n                        <div className={classes.Messenger_message_list_item_userName}>{v.user.name}</div>\n                        <div className={classes.Messenger_message_list_item_userDate}>{formatAMPM(v.sentAt)}</div>\n                    </div>\n                    {v.text}\n                </div>\n            </div>));\n    }\n\n}\n\nexport default Messenger","/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/components/Sidebar/Sidebar.js",[],"/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/exceptions/ServerException.js",[],["54","55"],"/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/service/MessagesService.js",[],"/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/models/HTTPCodes.js",[],"/Users/iuliiafirsova/Job_Unterlagen/CV/Messenger/http-root/messenger-app/src/store.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"64","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":28,"column":8,"nodeType":"67","endLine":28,"endColumn":10,"suggestions":"68"},{"ruleId":"56","replacedBy":"69"},{"ruleId":"58","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'users'. Either include them or remove the dependency array.","ArrayExpression",["73"],["71"],["72"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [dispatch, users]",{"range":"76","text":"77"},[1085,1087],"[dispatch, users]"]